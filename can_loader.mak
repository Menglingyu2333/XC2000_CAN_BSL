# TASKING EDE (Windows based integrated Embedded Development Environment)
#
# This makefile has been generated by TASKING EDE
#
# Toolchain: TASKING Tools for C166/ST10  v8.7r3
#

PROJ    = can_loader
PROJDIR = c:\projekte\appnote_web\review\p11_can_flash\can_loader
PRODDIR = c:\program files\tasking\c166 v8.7r3

BINDIR  = $(PRODDIR)\bin
INCDIR  = $(PRODDIR)\include
LIBDIR  = $(PRODDIR)\lib

CC166BIN = $(PRODDIR)\bin
	export CC166BIN

OPT_CC  = -Wcp-D_USMLIB=  -Wcp"-I$(PRODDIR)\include" -Ms -Wc"-I$(PRODDIR)\include" -Wc-x2 -Wc-Bhoeufmknladij          -Wc-OB -Wc-OE -Wc-zswitch_tabmem_default -Wc-zautobitastruct-4 -Wc-zautobita-0 -FSC -noc++ -Wc-A1 -Wc-zvolatile_union -Wc-O1 -Wc-g -Wc-newerr -Wc-s -tmp -Wc-i0 "-WaPR($*.lst)" -WaPL(60) -WaPW(132) -WaTA(8) -WaWA(1) -WaCA -WaNOM166 -WaSN(regxc2287.def) -WaEXTEND2 -WmDEF(_EXT,1) -WmDEF(_EXT2,1) -WmDEF(_EXT22,0) -WmDEF(_EXTMAC,1) -WmDEF(MODEL,SMALL) -WmDEF(_USRSTACK,0) -WmDEF(_SINGLE_FP,0) -WmWA(1) -WmINC('$(PRODDIR)\include')
OPT_LC  = -trap -WoPRINT("can_loader.map") -Ms -x2 EXTEND2 -Bhoeufmknladij  -WlNOWARNING -WoNOWARNING -cf "c:\projekte\appnote_web\review\p11_can_flash\can_loader\_can_loader.ilo"
OPT_OPIHEX = -i32 -l32
OPT_OPI3E = -v2
OPT_XVW = -G "." -tcfg "c:\projekte\appnote_web\review\p11_can_flash\can_loader\_can_loader.cfg" --single_instance --load_application_download=true --load_application_verify=true --enable_flash=false --load_application_use_map_file=true --load_application_signal=true --load_application_program_reset=true --load_application_target_reset=true --load_application_goto_main=true --load_application_break_on_exit=true -i -a 100 -b 200 -c 32 -s 26

all : $(PROJ).abs $(PROJ).out $(PROJ).hex

main.obj : main.c main.h xc22xxregs.h <1254817195>

	@echo Compiling and assembling ${*F}.c
	@"$(PRODDIR)\bin\cc166.exe" -f <<EOF -c main.c
	${separate "\n" -o "$@" $(OPT_CC) }
	EOF

start.obj : start.asm "$(PRODDIR)\include\head.asm" "$(PRODDIR)\include\_c_init.asm" <1254817195>
	@echo Preprocessing ${*F}.asm
	@"$(PRODDIR)\bin\cc166.exe" -f <<EOF -c start.asm
	${separate "\n" -o "$@" $(OPT_CC) }
	EOF

flashdev.obj : flashdev.c main.h xc22xxregs.h <1254817195>

	@echo Compiling and assembling ${*F}.c
	@"$(PRODDIR)\bin\cc166.exe" -f <<EOF -c flashdev.c
	${separate "\n" -o "$@" $(OPT_CC) }
	EOF

can.obj : can.c main.h xc22xxregs.h <1254817195>

	@echo Compiling and assembling ${*F}.c
	@"$(PRODDIR)\bin\cc166.exe" -f <<EOF -c can.c
	${separate "\n" -o "$@" $(OPT_CC) }
	EOF

$(PROJ).out : main.obj start.obj flashdev.obj can.obj _can_loader.ilo <1255336935>
	@echo Linking and locating to ${*F}.out
	@"$(PRODDIR)\bin\cc166.exe" $(LINKCPP) -o "$@" -f <<EOF 
	${separate "\n" $(match .obj $!) $(match .lno $!) $(match .lib $!) $(OPT_LC)}
	EOF

$(PROJ).abs : $(PROJ).out <1254817195>
	@echo Converting ${*F}.out to ${*F}.abs in IEEE-695 format
	@"$(PRODDIR)\bin\ieee166.exe" $(OPT_OPI3E) $! "$@"

$(PROJ).hex : $(PROJ).out <1254817195>
	@echo Converting ${*F}.out to ${*F}.hex in Intel Hex format
	@"$(PRODDIR)\bin\ihex166.exe" $(OPT_OPIHEX) $! "$@"

clean :
	@echo Deleting intermediate files and output files for project '$(PROJ)'.
	@$(exist main.obj del main.obj)
	@$(exist main.src del main.src)
	@$(exist main.lst del main.lst)
	@$(exist start.obj del start.obj)
	@$(exist start.src del start.src)
	@$(exist start.lst del start.lst)
	@$(exist flashdev.obj del flashdev.obj)
	@$(exist flashdev.src del flashdev.src)
	@$(exist flashdev.lst del flashdev.lst)
	@$(exist can.obj del can.obj)
	@$(exist can.src del can.src)
	@$(exist can.lst del can.lst)
	@$(exist $(PROJ).out del $(PROJ).out)
	@$(exist can_loader.map del can_loader.map)
	@$(exist $(PROJ).abs del $(PROJ).abs)
	@$(exist $(PROJ).hex del $(PROJ).hex)

# Copyright 1997-2007 Altium BV
# Serial#:	000000
# EDE Version:	99.9r9 (Build 150)
